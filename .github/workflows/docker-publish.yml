---
name: Docker Build & Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Test docker build
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Test
        uses: ./.github/actions/docker-test
  build:
    runs-on: ubuntu-latest
    name: Build & push image
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get version
        id: getver
        if: github.event_name != 'pull_request'
        run: echo "::set-output name=version::v""$(grep "FROM factoriotools/factorio" Dockerfile | awk -F ':' '{print $2}' | xargs)"
      - name: Add tag
        if: github.event_name != 'pull_request'
        uses: richardsimko/update-tag@v1
        with:
          tag_name: ${{ steps.getver.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add major/minor tags
        if: github.event_name != 'pull_request'
        uses: fischerscode/tagger@v0.1
        with:
          prefix: v
          tag: ${{ steps.getver.outputs.version }}    
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
